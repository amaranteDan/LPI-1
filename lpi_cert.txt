
***************************************
*                                     *
* Arquivo base para revisão da LPI    *
* Criador: Daniel Amarante            *
* Revisor: Marcio Carnicelli	      * 
*                                     *
***************************************

*** Lista apenas de comandos e exemplos.

101. Arquitetura do sistema.

Determinar e configurar o hardware

/sys - Arquivos mais importantes

/sys/block - Informações de blocos HD, CD, DVD
/sys/bus   - Informações de barramentos suportados pelo kernel
/sys/class - Organização dos dispositivos suportados pelo sistema em subdiretorios
/sys/module  Modulos carregados na memória pelo kernel

Arquivos importantes do /proc -Podem ser solicitados na prova

 acpi   -Controlador de energia
 asound
 buddyinfo
 bus    -Informações sobre o barramento
 cgroups  -Gerenciador de recursos para virtualização e container
 cmdline  -Parametro mais importante. Passa parametros para o kernel durante a inicialização
 consoles
 cpuinfo  -Traz diversas informações sobre os nucleos do processador. Exemplo. Bugs /vendor id/model name
 crypto
 devices
 diskstats
 dma       -Informações sobre uso da memoria dma e que processos escrevem e leem direto na memoria RAM sem o auxilio do processador.
 driver
 filesystems -Mostra sistemas de arquivos disponivel e montado pelo comando mount
 fs
 interrupts  -Lista de IRQS associados aos dispositivos
 iomem
 ioports     -Exibe faixas de memoria associada ao dispositivo bem como as entradas e saidasno arquivo
 irq
 kallsyms    -Exibe todos os simbolos conhecidos pelo kernel e acessiveis/exportados pelos modulos.
 kcore       -Exibe informações sobre a memoria RAM
 keys
 key-users
 kmsg
 kpagecgroup
 kpagecount
 kpageflags
 loadavg
 locks
 meminfo    -Estatisticas sobre o uso da memoria
 misc
 modules
 mounts -> self/mounts
 mpt
 mtrr      -Memory Type Range Registers -Usado pela familia Intel P6 para controlar o acesso dos processos ao range de memoria.
 self/net
 pagetypeinfo
 partitions  -Contem informação sobre as partições, numeros de blocos e nome dos dispositivos. Usar o /proc/devices para identificar os blocos.
 pressure
 sched_debug
 schedstat
 slabinfo
 softirqs
 stat
 swaps      -Informação sobre a swap, onde esta montada, tamanho e prioridade
 sys
 sysrq-trigger
 sysvipc
 thread-self -> 2883/task/2883
 timer_list
 tty
 uptime   -Traz informações sobre o tempo que o sistema esta "up" ligado
 version  -Informações sobre a versão de Kernel, versão do sistema
 vmallocinfo
 vmstat   -Informações e estatistica da Memória Virtual
 zoneinfo


### Descobrindo a versão do Kernel

#uname -r 
5.9.0-kali1-amd64

#cat /proc/sys/kernel/osrelease
5.9.0-kali1-amd64

#### Listando os recursos de Hardware no Linux

**lsmod - Lista modulos carregados pelo kernel

Traz 3 informações. 
Module                  Size  Used by
snd                   110592  10 snd_seq_device,snd_timer,snd_ac97_codec,snd_pcm,snd_rawmidi,snd_ens1371

#lsmod | grep snd - Listando um modulo especifico e quem depende dele para funcionar
snd_ens1371            32768  2
snd_ac97_codec        180224  1 snd_ens1371
ac97_bus               16384  1 snd_ac97_codec
gameport               20480  1 snd_ens1371
snd_rawmidi            45056  1 snd_ens1371
snd_seq_device         16384  1 snd_rawmidi
snd_pcm               135168  2 snd_ac97_codec,snd_ens1371
snd_timer              49152  1 snd_pcm
snd                   110592  10 snd_seq_device,snd_timer,snd_ac97_codec,snd_pcm,snd_rawmidi,snd_ens1371
soundcore              16384  1 snd


***Modinfo - Informações detalhadas sobre o modulo.

#modinfo snd
filename:       /lib/modules/5.9.0-kali1-amd64/kernel/sound/core/snd.ko
alias:          char-major-116-*
license:        GPL
description:    Advanced Linux Sound Architecture driver for soundcards.
author:         Jaroslav Kysela <perex@perex.cz>
depends:        soundcore
retpoline:      Y
intree:         Y
name:           snd
vermagic:       5.9.0-kali1-amd64 SMP mod_unload modversions 
parm:           slots:Module names assigned to the slots. (array of charp)
parm:           major:Major # for sound driver. (int)
parm:           cards_limit:Count of auto-loadable soundcards. (int)

***Modinfo -F filename - Exibe apenas um campo especifico

#modinfo -F filename snd
/lib/modules/5.9.0-kali1-amd64/kernel/sound/core/snd.ko

***Remover modulos

#rmmod cdrom -> Remover o modulo se nao houver dependencias
$ lsmod | grep cdrom
cdrom                  73728  1 sr_mod

#rmmod sr_mod -> Removendo a dependencia
#rmmod ccdrom -> Remover o modulo

***modprobe também pode ser usado para remover módulos ou carrega los

#modprobe -r (--remove) cdrom -> Remove um modulo ou dependencias

#modprobe -D (--show-depends) ccdrom -> Mostra as dependencias
# modprobe -D cdrom
insmod /lib/modules/5.9.0-kali1-amd64/kernel/drivers/cdrom/cdrom.ko

#modprobe -c --showconfig cdrom -> Mostra a configuração do modulo

***Passando parametros para o modulo

#modprobe -v cdrom lockdoor=0 -> Fechando a bandeja do cdrom.

**Sub comandos do modprobe

-b, --use-blacklist -> Para colocar o modulo em uma lista negra
-f, --force -> Para forçar a remoção de um modulo ou depedencia.

***Listando Dispositivos PCI.

***lspci

Caso não esteja instalado na sua distribuição, o pacote é: pciutils

Formato XX:YY.Z ->Numero da função pci
        |   |-->Numero do slot pci
        |->Numerodo barramento pci


-s Busca o endereço a ser verificado
-v Modo com mais detalhes. Ex
-nn Nome e numero - Saida formato numerico


# lspci -s 02:02.0 -v                                                                        
02:02.0 Multimedia audio controller: Ensoniq ES1371/ES1373 / Creative Labs CT2518 (rev 02)
        DeviceName: sound
        Subsystem: Ensoniq Audio PCI 64V/128/5200 / Creative CT4810/CT5803/CT5806 [Sound Blaster PCI]
        Physical Slot: 34
        Flags: bus master, medium devsel, latency 64, IRQ 16
        I/O ports at 2040 [size=64]
        Capabilities: [40] PCI Advanced Features
        Kernel driver in use: snd_ens1371
        Kernel modules: snd_ens1371


#lspci -nn 
02:02.0 Multimedia audio controller [0401]: Ensoniq ES1371/ES1373 / Creative Labs CT2518 [1274:1371] (rev 02)

# lspci -nn -s 02:03.0 -> Adicionando mais opções
02:03.0 USB controller [0c03]: VMware USB2 EHCI Controller [15ad:0770]

# lspci -s 02:03.0 -k ->Veriifcando o kernel em uso pelo dispositivo.
02:03.0 USB controller: VMware USB2 EHCI Controller
        DeviceName: ehci
        Subsystem: VMware USB2 EHCI Controller
        Kernel driver in use: ehci-pci
        Kernel modules: ehci_pci

**O arquivo modules.pcimap - /lib/modules/<versão do kernel> prove ao sistema um mapeamento dos 
dispositivos pci a serem mapeados


***Dispositivos USB

**Comando lsusb

Pacote usbutils

Padrões de Usb

O usbfs -> Sistema de arquivos virtual do USB. Diretorio /proc/bus/usb.

OHCI -> Primeira versão 1.0
UHCI -> Padrão criado pela Intel -Implementação de Hardware mais barata.
EHCI -> Criada pela Intel. Versão 2.0

**Verificando o padrão usado no sistema
# lspci -v |grep [UOE]HCI
02:00.0 USB controller: VMware USB1.1 UHCI Controller (prog-if 00 [UHCI])
        Subsystem: VMware USB1.1 UHCI Controller
02:03.0 USB controller: VMware USB2 EHCI Controller (prog-if 20 [EHCI])
        Subsystem: VMware USB2 EHCI Controller


# dmesg |grep [UOE]HCI
[    3.862037] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    3.863356] uhci_hcd 0000:02:00.0: UHCI Host Controller
[    3.869044] ehci-pci: EHCI PCI platform driver
[    3.873116] usb usb1: Product: UHCI Host Controller
[    3.873730] ehci-pci 0000:02:03.0: EHCI Host Controller
[    3.939050] ehci-pci 0000:02:03.0: USB 2.0 started, EHCI 1.00
[    3.939144] usb usb2: Product: EHCI Host Controller


***Comando lsusb

# lsusb
Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 001 Device 003: ID 0e0f:0002 VMware, Inc. Virtual USB Hub
Bus 001 Device 002: ID 0e0f:0003 VMware, Inc. Virtual Mouse
Bus 001 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub

#lsusb -v ->Informações detalhadas

#lsusb -v -s 2:3 - Informações detalhadas no Barramento 2 / 3 Dispositivo

***Dispositivos SCSI

Cada Barramento possui ate 15 dispositivos por canal. 

# lsscsi                                                                                     
[1:0:0:0]    cd/dvd  NECVMWar VMware IDE CDR10 1.00  /dev/sr0 
[2:0:0:0]    disk    VMware,  VMware Virtual S 1.0   /dev/sda 
|  | | |
|
|

# lsscsi -l
[1:0:0:0]    cd/dvd  NECVMWar VMware IDE CDR10 1.00  /dev/sr0 
  state=running queue_depth=1 scsi_level=6 type=5 device_blocked=0 timeout=30
[2:0:0:0]    disk    VMware,  VMware Virtual S 1.0   /dev/sda 
  state=running queue_depth=32 scsi_level=3 type=0 device_blocked=0 timeout=180

# scsiinfo -l -> Obtendo informações sobre dispositivos scsi
/dev/sda

# scsiinfo -i /dev/sda

Inquiry command
---------------
Relative Address                   0
Wide bus 32                        1
Wide bus 16                        1
Synchronous neg.                   1
Linked Commands                    0
Command Queueing                   1
SftRe                              1
Device Type                        0
Peripheral Qualifier               0
Removable?                         0                                                                                                                                           
Device Type Modifier               0                                                                                                                                           
ISO Version                        0                                                                                                                                           
ECMA Version                       0                                                                                                                                           
ANSI Version                       2                                                                                                                                           
AENC                               0                                                                                                                                           
TrmIOP                             0                                                                                                                                           
Response Data Format               2                                                                                                                                           
Vendor:                    VMware,                                                                                                                                             
Product:                   VMware Virtual S                                                                                                                                    
Revision level:            1.0       

***Udev -> Substitui o gerenciador de dispositivos devfs a parti da versão 2.6.12 do kernel.

*São gerados dinamicamente conforme os itens de hardware são instalados. Diretorio /etc/udev/udev.conf e arquivos das regras /etc/udev/rules.d

comandos udevadm monitor / udevmonitor -> Gerenciam eventos do kernel.

# udevadm monitor
monitor will print the received events for:
UDEV - the event which udev sends out after rule processing
KERNEL - the kernel uevent

/sysfs -> Montado no /sys exporta informações sobre dispositivos para que os utilitarios de espaço do usuario possam acessar as informações.

*Comando systemctl

D-Bus -> Barramento de software distribuido que permite que os aplicativos de desktop enviem mensagens uns aos outros e recebam mensagens do kernel.

daemon: dbus.service

Dispositivos NVMe - Non-Volatile Memory Express - padrao usado para conexão direta de SSDs ao barramento pci.



101.2 Inicialização do sistema
Peso 3  

*************************************
O Processo de Inicialização.

1 - POST para identificar erros basicos de hardware.
2 -> O Bios ativa dispositivos necessarios para carregar o sistema, monitor, teclado e armazenamento.
3 -> A Bios carrega os primeiros 440 bytes do Bootloader a partir da MBR. (MAster Boot Record) 1 Estagio, conforme a ordem de Boot.
4 -> O Segundo estagio segue  com a carga do sistema operacional, localiza e carrega o Kernel e a initr (Initial RAM DRIVE). 
5 -> O kernel do linux carregado na memoria(RAM) pelo 2 estagio. Controla o hardware basico, CPU, controladoras de disco e endereçamento de memoria.
6 -> O kernel abre o initramfs (Initial RAM filesystem) que contem um sistema de arquivos raiz temporario usado durante a inicialização. Objetivo é fornecer modulos necessarios para que o kernel possa aceesar o sistema raiz de verdade do SO.
7 -> Logo que a raiz fica disponivel, o kernel monta os sitemas no /etc/fstab e executa o primeiro programa init. O /sbin/init le o /etc/inittab e executa os scripts de inicialização do sistema. (/etc/init.d/*) no runlevel configurado.

***************************************
O processo de Inicialização do UEFI.

1 - O processo POST é executado para identificar erros basicos de hardware.

2 - O UEFI ativa dispositivos necessarios para carregar o sistema, como monitor, teclado e armazenamento.

3 - O firmware UEFI le as definições na NVRAM para localizar os arquivos da partição ESP e executar o aplicativo EFI predefinido, primeiro estagio do carregador de Boot.

4 - Se o aplicativo EFI for um bootloader, o kernel do sistema sera carregado para iniciar o sistema operacional.

Secure boot permite apenas aplicativos EFI assinados(autorizados pelo fabricante). Proteção contra alterações no carregador de boot.


Dica do mestre: Quando não aparece automaticamente  as opções pode pressionar a tecla: shift em sistemas MBR ou esc em sistemas UEFI.




